#!/bin/bash

MACRONAME=$1
OUTPUTNAME=$2

ROOTDIR=rootTools
STYLEFILE=${ROOTDIR}/Style_Example.C
STYLENAME=Example
PLOTTER=${ROOTDIR}/plotter.C

# Remake output if not there.
if [ -e ${OUTPUTNAME} ]; then
		REMAKE=0
else
		REMAKE=1
fi

# Parse filename. 
WIDTH=1000
HEIGHT=600

NAMEPART=${MACRONAME%.C}
# prerendered-suffix used output-filetype-differentiation.
NAMEPART=${NAMEPART%_prerendered}
# svg-suffix used output-filetype-differentiation.
NAMEPART=${NAMEPART%_svg}
# Size-part:
SIZEPART=$(echo ${NAMEPART} | sed 's#^.*_\([0-9]\+x[0-9]\+\)$#\1#')
if [ -n ${SIZEPART} ]; then
		# Have a size...
		NAMEPART=${NAMEPART%_${SIZEPART}}
		WIDTH=${SIZEPART%x*}
		HEIGHT=${SIZEPART#*x}
		#echo $WIDTH
		#echo $HEIGHT
fi

MACRONAME="${NAMEPART}.C"

# if we are newer...
test ${0} -nt ${OUTPUTNAME} && REMAKE=1

# if ghostscriptifyPDF is newer...
test ghostscriptifyPDF -nt ${OUTPUTNAME} && REMAKE=1

# if input is newer...
test $(readlink -f ${MACRONAME}) -nt ${OUTPUTNAME} && REMAKE=1
# if style is newer...
test ${STYLEFILE} -nt ${OUTPUTNAME} && REMAKE=1
# if plotter is newer...
test ${PLOTTER} -nt ${OUTPUTNAME} && REMAKE=1

# Dependencies, it's C++, sort of!
OLD_IFS=${IFS}
IFS=$'\n'
NAMED_MACRO_DEPS=$(grep -E '#\s*include\s+"([^>]*)"' ${MACRONAME}                  | sed -n -e 's/.*[^"]*["]\([^"]\+\)["].*/\1/p')
UNNAMED_MACRO_DEPS=$(grep -E '\s*gInterpreter->LoadFile\("([^"]*)"\)' ${MACRONAME} | sed -n -e 's/.*[^"]*["]\([^"]\+\)["].*/\1/p')
MACRO_BASE_DIR=$(dirname ${MACRONAME})

for DEP in ${NAMED_MACRO_DEPS}; do
		if [[ ! "${DEP}" =~ ^/ ]]; then
				test $(readlink -f "${MACRO_BASE_DIR}/${DEP}") -nt ${OUTPUTNAME} && REMAKE=1
		fi
done
for DEP in ${UNNAMED_MACRO_DEPS}; do
		if [[ ! "${DEP}" =~ ^/ ]]; then
				test $(readlink -f "${MACRO_BASE_DIR}/${DEP}") -nt ${OUTPUTNAME} && REMAKE=1
		fi
done
IFS=${OLD_IFS}

ROOTFILE=${NAMEPART}.root
if [ -e ${ROOTFILE} ]; then
		HAVEROOTFILE=1
		# If newer, need remake. 
		test $(readlink -f ${ROOTFILE}) -nt ${OUTPUTNAME} && REMAKE=1
else
		HAVEROOTFILE=0
fi

if [ ${REMAKE} -eq 1 ]; then
		echo "Need to remake ${OUTPUTNAME}..."
		# Remove output so LaTeX will never pickup old stuff no matter our exit status.
		rm -f ${OUTPUTNAME}
else
		echo "${OUTPUTNAME} still current."
		exit 0
fi

root -x -b -l ${PLOTTER}"(\"${NAMEPART}\", \"${OUTPUTNAME}\", ${HAVEROOTFILE}, ${WIDTH}, ${HEIGHT}, \"${STYLEFILE}\", \"${STYLENAME}\")"
if [ $? -eq 0 ]; then
		echo "Remaking ${OUTPUTNAME} went well."
		if [[ "${OUTPUTNAME}" == *.pdf ]]; then
				./ghostscriptifyPDF ${OUTPUTNAME}
		fi
else
		echo "Remaking of ${OUTPUTNAME} failed, removing it!"
		rm ${OUTPUTNAME}
fi
